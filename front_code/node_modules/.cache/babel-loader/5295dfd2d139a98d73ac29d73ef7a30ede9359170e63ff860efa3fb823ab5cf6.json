{"ast":null,"code":"import * as THREE from 'three';\n// import { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\nimport { MTLLoader } from 'three/addons/loaders/MTLLoader.js';\nimport { OBJLoader } from 'three/addons/loaders/OBJLoader.js';\nexport const allBaseObject = [];\nfunction getModelLoader(fileType) {\n  switch (fileType) {\n    // case 'stl':\n    //   return new STLLoader();\n    case 'mtl':\n      return new MTLLoader();\n    case 'gltf':\n    case 'glb':\n      return new GLTFLoader();\n    case 'obj':\n      return new OBJLoader();\n    // 或者返回一个包含 .obj 和 .mtl 加载逻辑的对象\n    default:\n      throw new Error('Unsupported file type');\n  }\n}\nasync function loadModel(url, baseURL, modelName) {\n  const fileExtension = url.split('.').pop().toLowerCase();\n  if (fileExtension === 'obj') {\n    const mtlLoader = new MTLLoader();\n    mtlLoader.setPath(`/static/`);\n    const materials = await new Promise((resolve, reject) => {\n      mtlLoader.load(`${modelName}.mtl`, materials => {\n        materials.preload();\n        resolve(materials);\n      }, undefined,\n      // 进度回调（如果需要）\n      error => {\n        reject(error);\n      });\n    });\n    const objLoader = new OBJLoader();\n    objLoader.setMaterials(materials);\n    const geometryOrScene = await new Promise((resolve, reject) => {\n      objLoader.load(`${modelName}.obj`, obj => {\n        resolve(obj);\n      }, undefined,\n      // 进度回调（如果需要）\n      error => {\n        reject(error);\n      });\n    });\n    return {\n      geometryOrScene,\n      meshName: 'objObject'\n    };\n  } else {\n    // 其他类型的文件加载逻辑...\n  }\n}\n\n// 示例调用\n(async () => {\n  try {\n    await loadModel('/static/wu.stl', 'static', 'wu');\n    geometryOrScene.name = meshName;\n    scene.add(geometryOrScene);\n  } catch (error) {\n    console.error('Failed to load model:', error);\n  }\n})();","map":{"version":3,"names":["THREE","GLTFLoader","MTLLoader","OBJLoader","allBaseObject","getModelLoader","fileType","Error","loadModel","url","baseURL","modelName","fileExtension","split","pop","toLowerCase","mtlLoader","setPath","materials","Promise","resolve","reject","load","preload","undefined","error","objLoader","setMaterials","geometryOrScene","obj","meshName","name","scene","add","console"],"sources":["D:/A.yichuang/Codespaces/front_code/src/components/modelShow/TBaseObject.js"],"sourcesContent":["import * as THREE from 'three';\r\n// import { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\r\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\r\nimport { MTLLoader } from 'three/addons/loaders/MTLLoader.js';\r\nimport { OBJLoader } from 'three/addons/loaders/OBJLoader.js';\r\n\r\n\r\nexport const allBaseObject = [];\r\n\r\nfunction getModelLoader(fileType) {\r\n  switch (fileType) {\r\n    // case 'stl':\r\n    //   return new STLLoader();\r\n    case 'mtl':\r\n      return new MTLLoader();\r\n    case 'gltf':\r\n    case 'glb':\r\n      return new GLTFLoader();\r\n    case 'obj':\r\n      return new OBJLoader(); // 或者返回一个包含 .obj 和 .mtl 加载逻辑的对象\r\n    default:\r\n      throw new Error('Unsupported file type');\r\n  }\r\n}\r\n\r\nasync function loadModel(url, baseURL, modelName) {\r\n  const fileExtension = url.split('.').pop().toLowerCase();\r\n\r\n  if (fileExtension === 'obj') {\r\n    const mtlLoader = new MTLLoader();\r\n    mtlLoader.setPath(`/static/`);\r\n\r\n    const materials = await new Promise((resolve, reject) => {\r\n      mtlLoader.load(\r\n        `${modelName}.mtl`,\r\n        (materials) => {\r\n          materials.preload();\r\n          resolve(materials);\r\n        },\r\n        undefined, // 进度回调（如果需要）\r\n        (error) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n\r\n    const objLoader = new OBJLoader();\r\n    objLoader.setMaterials(materials);\r\n\r\n    const geometryOrScene = await new Promise((resolve, reject) => {\r\n      objLoader.load(\r\n        `${modelName}.obj`,\r\n        (obj) => {\r\n          resolve(obj);\r\n        },\r\n        undefined, // 进度回调（如果需要）\r\n        (error) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n\r\n    return { geometryOrScene, meshName: 'objObject' };\r\n  } else {\r\n    // 其他类型的文件加载逻辑...\r\n  }\r\n}\r\n\r\n// 示例调用\r\n(async () => {\r\n  try {\r\n    await loadModel('/static/wu.stl', 'static', 'wu');\r\n    geometryOrScene.name = meshName;\r\n    scene.add(geometryOrScene);\r\n  } catch (error) {\r\n    console.error('Failed to load model:', error);\r\n  }\r\n})();"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B;AACA,SAASC,UAAU,QAAQ,oCAAoC;AAC/D,SAASC,SAAS,QAAQ,mCAAmC;AAC7D,SAASC,SAAS,QAAQ,mCAAmC;AAG7D,OAAO,MAAMC,aAAa,GAAG,EAAE;AAE/B,SAASC,cAAcA,CAACC,QAAQ,EAAE;EAChC,QAAQA,QAAQ;IACd;IACA;IACA,KAAK,KAAK;MACR,OAAO,IAAIJ,SAAS,CAAC,CAAC;IACxB,KAAK,MAAM;IACX,KAAK,KAAK;MACR,OAAO,IAAID,UAAU,CAAC,CAAC;IACzB,KAAK,KAAK;MACR,OAAO,IAAIE,SAAS,CAAC,CAAC;IAAE;IAC1B;MACE,MAAM,IAAII,KAAK,CAAC,uBAAuB,CAAC;EAC5C;AACF;AAEA,eAAeC,SAASA,CAACC,GAAG,EAAEC,OAAO,EAAEC,SAAS,EAAE;EAChD,MAAMC,aAAa,GAAGH,GAAG,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAExD,IAAIH,aAAa,KAAK,KAAK,EAAE;IAC3B,MAAMI,SAAS,GAAG,IAAId,SAAS,CAAC,CAAC;IACjCc,SAAS,CAACC,OAAO,CAAE,UAAS,CAAC;IAE7B,MAAMC,SAAS,GAAG,MAAM,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACvDL,SAAS,CAACM,IAAI,CACX,GAAEX,SAAU,MAAK,EACjBO,SAAS,IAAK;QACbA,SAAS,CAACK,OAAO,CAAC,CAAC;QACnBH,OAAO,CAACF,SAAS,CAAC;MACpB,CAAC,EACDM,SAAS;MAAE;MACVC,KAAK,IAAK;QACTJ,MAAM,CAACI,KAAK,CAAC;MACf,CACF,CAAC;IACH,CAAC,CAAC;IAEF,MAAMC,SAAS,GAAG,IAAIvB,SAAS,CAAC,CAAC;IACjCuB,SAAS,CAACC,YAAY,CAACT,SAAS,CAAC;IAEjC,MAAMU,eAAe,GAAG,MAAM,IAAIT,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC7DK,SAAS,CAACJ,IAAI,CACX,GAAEX,SAAU,MAAK,EACjBkB,GAAG,IAAK;QACPT,OAAO,CAACS,GAAG,CAAC;MACd,CAAC,EACDL,SAAS;MAAE;MACVC,KAAK,IAAK;QACTJ,MAAM,CAACI,KAAK,CAAC;MACf,CACF,CAAC;IACH,CAAC,CAAC;IAEF,OAAO;MAAEG,eAAe;MAAEE,QAAQ,EAAE;IAAY,CAAC;EACnD,CAAC,MAAM;IACL;EAAA;AAEJ;;AAEA;AACA,CAAC,YAAY;EACX,IAAI;IACF,MAAMtB,SAAS,CAAC,gBAAgB,EAAE,QAAQ,EAAE,IAAI,CAAC;IACjDoB,eAAe,CAACG,IAAI,GAAGD,QAAQ;IAC/BE,KAAK,CAACC,GAAG,CAACL,eAAe,CAAC;EAC5B,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdS,OAAO,CAACT,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C;AACF,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}